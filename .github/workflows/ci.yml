name: CI

on:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        vscode-version: ["stable", "insiders"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "24.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        if: runner.os != 'Linux'
        run: npm test
        env:
          VSCODE_VERSION: ${{ matrix.vscode-version }}

      - name: Run tests on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y xvfb
          xvfb-run -a npm test
        env:
          VSCODE_VERSION: ${{ matrix.vscode-version }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.vscode-version }}
          path: test-results/

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "24.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check code formatting
        run: |
          npm install -g prettier
          prettier --check "**/*.{js,json,md}"

      - name: Run ESLint
        run: |
          npm install -g eslint
          eslint . --ext .js || true

  package:
    needs: [test, lint]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "24.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Download extension icon
        run: |
          curl -L -o media/icon.png http://images.tuliptreetech.com/code-forge-orange-circle.png
          if [ ! -f media/icon.png ]; then
            echo "Failed to download icon"
            exit 1
          fi
          echo "Icon downloaded successfully"
          ls -la media/icon.png

      - name: Package extension
        run: vsce package

      - name: Upload VSIX
        uses: actions/upload-artifact@v4
        with:
          name: codeforge-vsix
          path: "*.vsix"
